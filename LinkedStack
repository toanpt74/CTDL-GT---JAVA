
class Node
{
	public int data;
    public Node next;
    public Node(int v)
    {
    	data = v;
        next = null;
    }
    public Node(int x, Node p)
    {
    	this.data = x;
        this.next = p;
    }
}
class LinkedStack
{
	protected Node head;
    public LinkedStack()
    {
    	head = null;
    }
    public boolean isEmpty()
    {
    	if(head==null) return true;
        else return false;
    }
    
    public void Push(int x)
    {
    	head = new Node(x, head);	
    }
    
    public void Add(int x)
    {
    	Node newnode = new Node(x);
        if(isEmpty())
        {
        	head = newnode;            
        }
        else
        {
        	newnode.next = head;
            head = newnode;
        }
    }
    
    public int Pop()
    {   
    	int v =0;
        if(!isEmpty())
        {
    		v = head.data;
        	head = head.next;
        }
        else {System.out.println("Stack is Empty!");}
        return v;
    }
    
    public void Display()
    {    	
        while(!isEmpty())
        {
        	int x = this.Pop();
            System.out.println(x);
        }
    }
    
}

public class Main {
  public static void main(String[] args) {
    System.out.println("Hello World!");   
    
    LinkedStack  S = new LinkedStack();
    
    for(int i=1; i<=5; i++)
    	S.Add(i);
    
    S.Display();
    
     
    
  }
}
